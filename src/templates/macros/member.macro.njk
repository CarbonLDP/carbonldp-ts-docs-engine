{%- from './parameter.macro.njk' import parameters -%}

{% macro base( memberString, doc ) %}
    <div class="member-code">
        <code class="highlight language-typescript" id="{{doc.name}}">{{ memberString | highlight('typescript', doc) }}</code>
    </div>
{% endmacro %}

{% macro constructor( classDoc, constructorDoc ) %}
    {% set paramsString %}( {{ '' if not constructorDoc.parameters else constructorDoc.parameters | join(', ') }} ){% endset %}
    {% set memberString %}
        {{ classDoc.name }}{{ classDoc.typeParams }}{{ paramsString if constructorDoc.parameters | length else "()" }}
    {% endset %}
    {{ base( memberString, classDoc ) }}
{% endmacro %}

{% macro index( methodDoc ) %}
    {% set memberString %}
        [ {{ methodDoc.parameters | first }} ]: {{ methodDoc.type }}
    {% endset %}
    {{ base( memberString, methodDoc ) }}
{% endmacro %}

{% macro method( methodDoc, isFunction=false ) %}
    {% set paramsString %}( {{ '' if  not methodDoc.parameters else methodDoc.parameters | join(', ') }} ){% endset %}
    {% set memberString %}
        {{ 'function ' if isFunction }}{{ methodDoc.name }}{{ methodDoc.typeParameters }}{{ paramsString if methodDoc.parameters | length else "()" }}: {{ methodDoc.type }}
    {% endset %}
    {{ base( memberString, methodDoc ) }}
{% endmacro %}

{% macro property( methodDoc ) %}
    {% set memberString %}
        {{ methodDoc.name }}{{ '?' if methodDoc.isOptional }}: {{ methodDoc.type }}
    {% endset %}
    {{ base( memberString, methodDoc ) }}
{% endmacro %}

{% macro type( typeDoc ) %}
    {% set typeString %}
        type {{ typeDoc.name }} {{typeDoc.typeParameters}} = {{ typeDoc.typeDefinition }}
    {% endset %}
    {{ base( typeString, typeDoc ) }}
{% endmacro %}

{% macro renderProperty( isStatic, members ) %}
    {% if members | length %}
        {%set title = 'Static Properties' if isStatic else 'Properties'%}
        <h3 class="doc-content__title">{{title}}</h3>
        {% for member in members %}
            {{ property( member ) }}
            {{ member.description | marked }}
            {% if not loop.last %}
                <div class="ui section divider"></div>
            {% endif %}
        {% endfor %}
    {% endif %}
{% endmacro %}

{% macro renderMethod( isStatic, members ) %}
    {% if members | length %}
            {%set title = 'Static Methods' if isStatic else 'Methods'%}
        <h3 class="doc-content__title">{{title}}</h3>
        {% for member in members %}
            {% set signatures = [ member ] if doc.docType === 'interface' or member.overloads.length === 0 else [] %}
            {% set signatures = signatures.concat( member.overloads ) %}
            {% for signature in signatures %}
                {{ method( signature ) }}
                {{ signature.description | marked }}
                {{ parameters(doc, signature) }}
                {% if signature.returns %}
                    <h4>Returns</h4>
                    {{ signature.returns.description | marked }}
                {% endif %}
                {% if not loop.last %}
                    <div class="ui section divider"></div>
                {% endif %}
            {% endfor %}
            {% if not loop.last %}
                <div class="ui section divider"></div>
            {% endif %}
        {% endfor %}
    {% endif %}
{% endmacro %}
